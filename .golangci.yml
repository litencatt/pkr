run:
  # timeout for analysis, e.g. 30s, 5m, default is 1m
  timeout: 5m

  # exit code when at least one issue was found, default is 1
  issues-exit-code: 1

  # include test files or not, default is true
  tests: true

output:
  # colored-line-number|line-number|json|tab|checkstyle|code-climate|junit-xml|github-actions
  formats:
    - format: colored-line-number

  # print lines of code with issue, default is true
  print-issued-lines: true

  # print linter name in the end of issue text, default is true
  print-linter-name: true

linters-settings:
  gofmt:
    # simplify code: gofmt with `-s` option, true by default
    simplify: true

  goimports:
    # put imports beginning with prefix after 3rd-party packages
    local-prefixes: github.com/litencatt/pkr

  revive:
    # minimal confidence for issues, default is 0.8
    confidence: 0.8

  gocyclo:
    # minimal code complexity to report, 30 by default
    min-complexity: 15

  dupl:
    # tokens count to trigger issue, 150 by default
    threshold: 100

  goconst:
    # minimal length of string constant, 3 by default
    min-len: 3
    # minimal occurrences count to trigger, 3 by default
    min-occurrences: 3

  misspell:
    # Correct spellings using locale preferences for US or UK
    locale: US

  lll:
    # max line length, lines longer will be reported. Default is 120.
    line-length: 120

  unparam:
    # Inspect exported functions, default is false. Set to true if no external program/library imports your code.
    check-exported: false

  nakedret:
    # make an issue if func has more lines of code than this setting and it has naked returns; default is 30
    max-func-lines: 30

linters:
  # please, do not use `enable-all`: it's deprecated and will be removed soon.
  # inverted configuration with `enable-all` and `disable` is not scalable during updates of golangci-lint
  disable-all: true
  enable:
    - errcheck
    - gofmt
    - gosec
    - gosimple
    - govet
    - ineffassign
    - misspell
    - staticcheck
    - typecheck
    - unused

  # don't enable:
  # - asciicheck
  # - gochecknoglobals
  # - gocognit
  # - godot
  # - godox
  # - goerr113
  # - maligned
  # - nestif
  # - prealloc
  # - testpackage
  # - wsl

issues:
  # Directories to exclude
  exclude-dirs:
    - vendor

  # Files to exclude
  exclude-files:
    - ".*\\.pb\\.go$"

  # List of regexps of issue texts to exclude, empty list by default.
  exclude:
    # errcheck: Almost all programs ignore errors on these functions and in most cases it's ok
    - "Error return value of .((os\\.)?std(out|err)\\..*|.*Close|.*Flush|os\\.Remove(All)?|.*print(f|ln)?|os\\.(Un)?Setenv). is not checked"

    # govet: Common false positives
    - "possible misuse of unsafe.Pointer"
    - "should have signature"

    # goconst: ignore short strings
    - "string `[^`]{1,2}` has \\d+ occurrences"

    # golint: False positive when methods on embedded structs are used
    - "exported method `.*` should have comment or be unexported"

    # staticcheck: Developers tend to write in C-style with an explicit 'break' in a 'switch', so it's ok to ignore
    - "ineffective break statement. Did you mean to break out of the outer loop"

  # Excluding configuration per-path, per-linter, per-text and per-source
  exclude-rules:
    # Exclude some linters from running on tests files.
    - path: _test\.go
      linters:
        - errcheck
        - gosec

    # Exclude known linters from partially hard-to-fix issues
    - linters:
        - revive
      text: "should be"

    - linters:
        - staticcheck
      text: "SA9003:"

    - linters:
        - lll
      source: "^//go:generate "

  # Independently from option `exclude` we use default exclude patterns,
  # it can be disabled by this option. To list all
  # excluded by default patterns execute `golangci-lint run --help`.
  # Default value for this option is true.
  exclude-use-default: false

  # The default value is false. If set to true exclude and exclude-rules
  # regular expressions become case sensitive.
  exclude-case-sensitive: false

  # The list of ids of default excludes to include or disable. By default it's empty.
  include:
    - EXC0002 # disable excluding of issues about comments from golint

  # Maximum issues count per one linter. Set to 0 to disable. Default is 50.
  max-issues-per-linter: 0

  # Maximum count of issues with the same text. Set to 0 to disable. Default is 3.
  max-same-issues: 0

  # Show only new issues: if there are unstaged changes or untracked files,
  # only those changes are analyzed, e.g. with --new-from-rev=HEAD~1.
  # The whole code base is analyzed when empty.
  new: false

  # Show only new issues created after git revision `REV`
  # new-from-rev: REV

  # Show only new issues created in git patch with set file path.
  # new-from-patch: path/to/patch/file

  # Fix found issues (if it's supported by the linter)
  fix: false
